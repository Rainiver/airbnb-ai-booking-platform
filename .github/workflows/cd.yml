name: CD

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            
            # 进入项目目录
            cd ~/airbnb-ai-booking-platform || {
              echo "首次部署，克隆仓库..."
              git clone https://github.com/${{ github.repository }}.git ~/airbnb-ai-booking-platform
              cd ~/airbnb-ai-booking-platform
            }
            
            # 拉取最新代码
            echo "📥 拉取最新代码..."
            git fetch origin
            git reset --hard origin/main
            
            # 创建环境变量文件
            echo "🔧 配置环境变量..."
            cat > .env << EOF
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            FACEBOOK_ID=${{ secrets.FACEBOOK_ID }}
            FACEBOOK_SECRET=${{ secrets.FACEBOOK_SECRET }}
            EOF
            
            # 停止并删除旧容器
            echo "🛑 停止旧容器..."
            docker stop airbnb-app || true
            docker rm airbnb-app || true
            
            # 构建新镜像
            echo "🏗️ 构建 Docker 镜像..."
            docker build -t airbnb-app:latest .
            
            # 启动新容器
            echo "🚀 启动应用..."
            docker run -d --name airbnb-app --restart unless-stopped \
              --env-file .env -p 3000:3000 airbnb-app:latest
            
            # 清理旧镜像
            echo "🧹 清理旧镜像..."
            docker image prune -f
            
            echo "✅ 部署成功！访问 http://${{ secrets.SSH_HOST }}:3000"


