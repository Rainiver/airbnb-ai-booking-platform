name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/rainiver/airbnb-ai-booking-platform:latest
            ghcr.io/rainiver/airbnb-ai-booking-platform:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 10m
          script: |
            set -e
            
            echo "🔑 登录 GitHub Container Registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            echo "📥 拉取最新镜像（30秒）..."
            docker pull ghcr.io/rainiver/airbnb-ai-booking-platform:latest
            
            echo "🛑 停止旧容器..."
            docker stop airbnb-app 2>/dev/null || true
            docker rm airbnb-app 2>/dev/null || true
            
            echo "🔧 创建环境变量..."
            mkdir -p ~/airbnb-app
            cd ~/airbnb-app
            cat > .env << 'EOF'
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            FACEBOOK_ID=${{ secrets.FACEBOOK_ID }}
            FACEBOOK_SECRET=${{ secrets.FACEBOOK_SECRET }}
            EOF
            
            echo "🚀 启动新容器..."
            docker run -d --name airbnb-app --restart unless-stopped \
              --env-file .env -p 3000:3000 \
              ghcr.io/rainiver/airbnb-ai-booking-platform:latest
            
            echo "⏳ 等待启动..."
            sleep 5
            
            echo "🔍 检查状态..."
            if docker ps | grep -q airbnb-app; then
              echo "✅ 部署成功！"
              echo "🌐 访问: http://${{ secrets.SSH_HOST }}:3000"
              docker ps | grep airbnb-app
            else
              echo "❌ 启动失败，查看日志:"
              docker logs airbnb-app 2>&1 | tail -30
              exit 1
            fi

